package com.xlljoy.o2o.web.shopadmin;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.multipart.commons.CommonsMultipartFile;
import org.springframework.web.multipart.commons.CommonsMultipartResolver;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.xlljoy.o2o.dto.ShopExecution;
import com.xlljoy.o2o.entity.Shop;
import com.xlljoy.o2o.entity.User;
import com.xlljoy.o2o.enums.ShopStateEnum;
import com.xlljoy.o2o.service.ShopService;
import com.xlljoy.o2o.util.HttpServletRequestUtil;
import com.xlljoy.o2o.util.ImageUtil;
import com.xlljoy.o2o.util.PathUtil;

@Controller
@RequestMapping("/shopmanagement")
public class ShopManagementController {
	
	@Autowired
	ShopService shopService;
	
	@RequestMapping(value="/addshop", method = RequestMethod.POST)
	public Map<String, Object> addShop(HttpServletRequest request) {
		Map<String, Object> modelMap = new HashMap<String, Object>();
		// 1 get info from front end and transfer to shop.class
		String shopStr = HttpServletRequestUtil.getString(request, "shopStr");
		ObjectMapper objectMapper = new ObjectMapper();
		Shop shop = null;
		try {
			shop = objectMapper.readValue(shopStr, Shop.class);
		} catch (IOException e) {
			modelMap.put("success", false);
			modelMap.put("errMsg", e.getMessage());
			return modelMap;
		} 
		
		// 1.1 img processing
		CommonsMultipartFile shopImg = null;
		CommonsMultipartResolver commonsMultipartResolver = new CommonsMultipartResolver(
				request.getSession().getServletContext());
		if (commonsMultipartResolver.isMultipart(request)) {
			MultipartHttpServletRequest  multipartHttpServletRequest = (MultipartHttpServletRequest)request;
			shopImg = (CommonsMultipartFile)multipartHttpServletRequest.getFile("shopImg");
		} else {
			modelMap.put("success", false);
			modelMap.put("errMsg", "shop img cannot be null");
			return modelMap;
		}
		
		// 2 register
		
		if (shop == null || shopImg == null) {
			modelMap.put("success", false);
			modelMap.put("errMsg", "input shop information");
			return modelMap;
		}
		User owner = new User();
		owner.setId(1L);
		shop.setOwner(owner);
		File img = new File(PathUtil.getImgBasePath() + ImageUtil.getRandomFileName());
		try {
			img.createNewFile();
//			img = ImageUtil.transferTo(shopImg);
		} catch (IOException e) {
			modelMap.put("success", false);
			modelMap.put("errMsg", "shop img cannot be transferred: " + e.getMessage());
			return modelMap;
		}
		try {
			ImageUtil.inputStreamToFile(shopImg, img);
		} catch (Exception e) {
			modelMap.put("success", false);
			modelMap.put("errMsg", e.getMessage());
			return modelMap;
		}
		
		ShopExecution sExecution = shopService.addShop(shop,img);
		if (sExecution.getState() == ShopStateEnum.CHECK.getState());
		modelMap.put("success", true);
		
		// 3 return
		return modelMap;
	}
}
